{"id":"../node_modules/wkx/lib/binaryreader.js","dependencies":[{"name":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\package.json","includedInParent":true,"mtime":1627243034191},{"name":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\node_modules\\wkx\\package.json","includedInParent":true,"mtime":1627093732874},{"name":"buffer","parent":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\node_modules\\wkx\\lib\\binaryreader.js","resolved":"C:\\Users\\welli\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nmodule.exports = BinaryReader;\r\n\r\nfunction BinaryReader(buffer, isBigEndian) {\r\n    this.buffer = buffer;\r\n    this.position = 0;\r\n    this.isBigEndian = isBigEndian || false;\r\n}\r\n\r\nfunction _read(readLE, readBE, size) {\r\n    return function () {\r\n        var value;\r\n\r\n        if (this.isBigEndian)\r\n            value = readBE.call(this.buffer, this.position);\r\n        else\r\n            value = readLE.call(this.buffer, this.position);\r\n\r\n        this.position += size;\r\n\r\n        return value;\r\n    };\r\n}\r\n\r\nBinaryReader.prototype.readUInt8 = _read(Buffer.prototype.readUInt8, Buffer.prototype.readUInt8, 1);\r\nBinaryReader.prototype.readUInt16 = _read(Buffer.prototype.readUInt16LE, Buffer.prototype.readUInt16BE, 2);\r\nBinaryReader.prototype.readUInt32 = _read(Buffer.prototype.readUInt32LE, Buffer.prototype.readUInt32BE, 4);\r\nBinaryReader.prototype.readInt8 = _read(Buffer.prototype.readInt8, Buffer.prototype.readInt8, 1);\r\nBinaryReader.prototype.readInt16 = _read(Buffer.prototype.readInt16LE, Buffer.prototype.readInt16BE, 2);\r\nBinaryReader.prototype.readInt32 = _read(Buffer.prototype.readInt32LE, Buffer.prototype.readInt32BE, 4);\r\nBinaryReader.prototype.readFloat = _read(Buffer.prototype.readFloatLE, Buffer.prototype.readFloatBE, 4);\r\nBinaryReader.prototype.readDouble = _read(Buffer.prototype.readDoubleLE, Buffer.prototype.readDoubleBE, 8);\r\n\r\nBinaryReader.prototype.readVarInt = function () {\r\n    var nextByte,\r\n        result = 0,\r\n        bytesRead = 0;\r\n\r\n    do {\r\n        nextByte = this.buffer[this.position + bytesRead];\r\n        result += (nextByte & 0x7F) << (7 * bytesRead);\r\n        bytesRead++;\r\n    } while (nextByte >= 0x80);\r\n\r\n    this.position += bytesRead;\r\n\r\n    return result;\r\n};\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/wkx/lib/binaryreader.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../node_modules/wkx/lib/binaryreader.js":"module.exports = BinaryReader;\r\n\r\nfunction BinaryReader(buffer, isBigEndian) {\r\n    this.buffer = buffer;\r\n    this.position = 0;\r\n    this.isBigEndian = isBigEndian || false;\r\n}\r\n\r\nfunction _read(readLE, readBE, size) {\r\n    return function () {\r\n        var value;\r\n\r\n        if (this.isBigEndian)\r\n            value = readBE.call(this.buffer, this.position);\r\n        else\r\n            value = readLE.call(this.buffer, this.position);\r\n\r\n        this.position += size;\r\n\r\n        return value;\r\n    };\r\n}\r\n\r\nBinaryReader.prototype.readUInt8 = _read(Buffer.prototype.readUInt8, Buffer.prototype.readUInt8, 1);\r\nBinaryReader.prototype.readUInt16 = _read(Buffer.prototype.readUInt16LE, Buffer.prototype.readUInt16BE, 2);\r\nBinaryReader.prototype.readUInt32 = _read(Buffer.prototype.readUInt32LE, Buffer.prototype.readUInt32BE, 4);\r\nBinaryReader.prototype.readInt8 = _read(Buffer.prototype.readInt8, Buffer.prototype.readInt8, 1);\r\nBinaryReader.prototype.readInt16 = _read(Buffer.prototype.readInt16LE, Buffer.prototype.readInt16BE, 2);\r\nBinaryReader.prototype.readInt32 = _read(Buffer.prototype.readInt32LE, Buffer.prototype.readInt32BE, 4);\r\nBinaryReader.prototype.readFloat = _read(Buffer.prototype.readFloatLE, Buffer.prototype.readFloatBE, 4);\r\nBinaryReader.prototype.readDouble = _read(Buffer.prototype.readDoubleLE, Buffer.prototype.readDoubleBE, 8);\r\n\r\nBinaryReader.prototype.readVarInt = function () {\r\n    var nextByte,\r\n        result = 0,\r\n        bytesRead = 0;\r\n\r\n    do {\r\n        nextByte = this.buffer[this.position + bytesRead];\r\n        result += (nextByte & 0x7F) << (7 * bytesRead);\r\n        bytesRead++;\r\n    } while (nextByte >= 0x80);\r\n\r\n    this.position += bytesRead;\r\n\r\n    return result;\r\n};\r\n"},"lineCount":49}},"error":null,"hash":"fece3589dfc24d7621ef465ad31a1403","cacheData":{"env":{}}}