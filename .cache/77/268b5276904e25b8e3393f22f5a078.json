{"id":"../node_modules/sequelize/lib/errors/query-error.js","dependencies":[{"name":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\package.json","includedInParent":true,"mtime":1627243034191},{"name":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\node_modules\\sequelize\\package.json","includedInParent":true,"mtime":1627093732875},{"name":"./base-error","loc":{"line":3,"column":26},"parent":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\node_modules\\sequelize\\lib\\errors\\query-error.js","resolved":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\node_modules\\sequelize\\lib\\errors\\base-error.js"}],"generated":{"js":"'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar BaseError = require('./base-error');\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\n\n\nvar QueryError = /*#__PURE__*/function (_BaseError) {\n  _inherits(QueryError, _BaseError);\n\n  var _super = _createSuper(QueryError);\n\n  function QueryError(message) {\n    var _this;\n\n    _classCallCheck(this, QueryError);\n\n    _this = _super.call(this, message);\n    _this.name = 'SequelizeQueryError';\n    return _this;\n  }\n\n  return QueryError;\n}(BaseError);\n\nmodule.exports = QueryError;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":1,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":0}},{"name":"BaseError","generated":{"line":21,"column":4},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":6}},{"generated":{"line":21,"column":13},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":15}},{"name":"require","generated":{"line":21,"column":16},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":18}},{"generated":{"line":21,"column":23},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":25}},{"generated":{"line":21,"column":24},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":26}},{"generated":{"line":21,"column":38},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":25}},{"generated":{"line":21,"column":39},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":5,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":6,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":7,"column":0}},{"name":"QueryError","generated":{"line":27,"column":4},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":8,"column":6}},{"generated":{"line":32,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":2}},{"name":"message","generated":{"line":32,"column":22},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":14}},{"generated":{"line":32,"column":29},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":2}},{"generated":{"line":32,"column":31},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":23}},{"generated":{"line":33,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":23}},{"generated":{"line":35,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":23}},{"generated":{"line":37,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":10,"column":4}},{"name":"message","generated":{"line":37,"column":30},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":10,"column":10}},{"generated":{"line":37,"column":37},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":10,"column":4}},{"generated":{"line":38,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":11,"column":4}},{"name":"name","generated":{"line":38,"column":10},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":11,"column":9}},{"generated":{"line":38,"column":14},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":11,"column":4}},{"generated":{"line":38,"column":17},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":11,"column":16}},{"generated":{"line":38,"column":38},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":11,"column":4}},{"generated":{"line":39,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":9,"column":23}},{"generated":{"line":40,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":12,"column":3}},{"name":"BaseError","generated":{"line":43,"column":2},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":8,"column":25}},{"name":"module","generated":{"line":45,"column":0},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":15,"column":0}},{"generated":{"line":45,"column":6},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":15,"column":6}},{"name":"exports","generated":{"line":45,"column":7},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":15,"column":7}},{"generated":{"line":45,"column":14},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":15,"column":0}},{"name":"QueryError","generated":{"line":45,"column":17},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":15,"column":17}},{"generated":{"line":45,"column":27},"source":"../node_modules/sequelize/lib/errors/query-error.js","original":{"line":15,"column":0}}],"sources":{"../node_modules/sequelize/lib/errors/query-error.js":"'use strict';\n\nconst BaseError = require('./base-error');\n\n/**\n * Thrown when a query is passed invalid options (see message for details)\n */\nclass QueryError extends BaseError {\n  constructor(message) {\n    super(message);\n    this.name = 'SequelizeQueryError';\n  }\n}\n\nmodule.exports = QueryError;\n"},"lineCount":null}},"error":null,"hash":"9cd86b0372ae35477768b53a606114e3","cacheData":{"env":{}}}