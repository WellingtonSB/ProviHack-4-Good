{"id":"../node_modules/toposort-class/build/toposort.js","dependencies":[{"name":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\package.json","includedInParent":true,"mtime":1627243034191},{"name":"C:\\Users\\welli\\Documents\\WorkSpaces\\Hack4good\\ProviHack-4-Good\\node_modules\\toposort-class\\package.json","includedInParent":true,"mtime":1627093732874}],"generated":{"js":"var define;\nvar global = arguments[3];\n/****\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Gustavo Henke and Aaron Trent\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n ****/\n(function( global, factory ) {\n    if( typeof define === \"function\" && define.amd ) {\n        define( \"Toposort\", [\"exports\", \"module\"], factory );\n    } else if( typeof exports !== \"undefined\" && typeof module !== \"undefined\" ) {\n        factory( exports, module );\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory( mod.exports, mod );\n        global.Toposort = mod.exports;\n    }\n})( this, function( exports, module ) {\n    \"use strict\";\n\n    function _classCallCheck( instance, Constructor ) {\n        if( !(instance instanceof Constructor) ) {\n            throw new TypeError( \"Cannot call a class as a function\" );\n        }\n    }\n\n    var Toposort = (function() {\n        function Toposort() {\n            _classCallCheck( this, Toposort );\n\n            this.edges = [];\n            this.Toposort = Toposort;\n        }\n\n        /**\n         * Adds dependency edges.\n         *\n         * @since   0.1.0\n         * @param   {String} item               An dependent name. Must be an string and not empty\n         * @param   {String[]|String} [deps]    An dependency or array of dependencies\n         * @returns {Toposort}                  The Toposort instance\n         */\n\n        Toposort.prototype.add = function add( item, deps ) {\n            if( typeof item !== \"string\" || !item ) {\n                throw new TypeError( \"Dependent name must be given as a not empty string\" );\n            }\n\n            deps = Array.isArray( deps ) ? deps : [deps];\n\n            if( deps.length > 0 ) {\n                for( var _iterator = deps, _isArray = Array.isArray( _iterator ), _i = 0, _iterator = _isArray ?\n                                                                                                      _iterator :\n                                                                                                      _iterator[Symbol.iterator](); ; ) {\n                    var _ref;\n\n                    if( _isArray ) {\n                        if( _i >= _iterator.length ) {\n                            break;\n                        }\n                        _ref = _iterator[_i++];\n                    } else {\n                        _i = _iterator.next();\n                        if( _i.done ) {\n                            break;\n                        }\n                        _ref = _i.value;\n                    }\n\n                    var dep = _ref;\n\n                    if( typeof dep !== \"string\" || !dep ) {\n                        throw new TypeError( \"Dependency name must be given as a not empty string\" );\n                    }\n\n                    this.edges.push( [item, dep] );\n                }\n            } else {\n                this.edges.push( [item] );\n            }\n\n            return this;\n        };\n\n        /**\n         * Runs the toposorting and return an ordered array of strings\n         *\n         * @since   0.1.0\n         * @returns {String[]}  The list of items topologically sorted.\n         */\n\n        Toposort.prototype.sort = function sort() {\n            var _this = this;\n\n            var nodes = [];\n\n            //accumulate unique nodes into a large list\n            for( var _iterator2 = this.edges, _isArray2 = Array.isArray( _iterator2 ), _i2 = 0, _iterator2 = _isArray2 ?\n                                                                                                             _iterator2 :\n                                                                                                             _iterator2[Symbol.iterator](); ; ) {\n                var _ref2;\n\n                if( _isArray2 ) {\n                    if( _i2 >= _iterator2.length ) {\n                        break;\n                    }\n                    _ref2 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if( _i2.done ) {\n                        break;\n                    }\n                    _ref2 = _i2.value;\n                }\n\n                var edge = _ref2;\n\n                for( var _iterator3 = edge, _isArray3 = Array.isArray( _iterator3 ), _i3 = 0, _iterator3 = _isArray3 ?\n                                                                                                           _iterator3 :\n                                                                                                           _iterator3[Symbol.iterator](); ; ) {\n                    var _ref3;\n\n                    if( _isArray3 ) {\n                        if( _i3 >= _iterator3.length ) {\n                            break;\n                        }\n                        _ref3 = _iterator3[_i3++];\n                    } else {\n                        _i3 = _iterator3.next();\n                        if( _i3.done ) {\n                            break;\n                        }\n                        _ref3 = _i3.value;\n                    }\n\n                    var node = _ref3;\n\n                    if( nodes.indexOf( node ) === -1 ) {\n                        nodes.push( node );\n                    }\n                }\n            }\n\n            //initialize the placement of nodes into the sorted array at the end\n            var place = nodes.length;\n\n            //initialize the sorted array with the same length as the unique nodes array\n            var sorted = new Array( nodes.length );\n\n            //define a visitor function that recursively traverses dependencies.\n            var visit = function visit( node, predecessors ) {\n                //check if a node is dependent of itself\n                if( predecessors.length !== 0 && predecessors.indexOf( node ) !== -1 ) {\n                    throw new Error( \"Cyclic dependency found. \" + node + \" is dependent of itself.\\nDependency chain: \"\n                                     + predecessors.join( \" -> \" ) + \" => \" + node );\n                }\n\n                var index = nodes.indexOf( node );\n\n                //if the node still exists, traverse its dependencies\n                if( index !== -1 ) {\n                    var copy = false;\n\n                    //mark the node as false to exclude it from future iterations\n                    nodes[index] = false;\n\n                    //loop through all edges and follow dependencies of the current node\n                    for( var _iterator4 = _this.edges, _isArray4 = Array.isArray( _iterator4 ), _i4 = 0, _iterator4 = _isArray4 ?\n                                                                                                                      _iterator4 :\n                                                                                                                      _iterator4[Symbol.iterator](); ; ) {\n                        var _ref4;\n\n                        if( _isArray4 ) {\n                            if( _i4 >= _iterator4.length ) {\n                                break;\n                            }\n                            _ref4 = _iterator4[_i4++];\n                        } else {\n                            _i4 = _iterator4.next();\n                            if( _i4.done ) {\n                                break;\n                            }\n                            _ref4 = _i4.value;\n                        }\n\n                        var edge = _ref4;\n\n                        if( edge[0] === node ) {\n                            //lazily create a copy of predecessors with the current node concatenated onto it\n                            copy = copy || predecessors.concat( [node] );\n\n                            //recurse to node dependencies\n                            visit( edge[1], copy );\n                        }\n                    }\n\n                    //add the node to the next place in the sorted array\n                    sorted[--place] = node;\n                }\n            };\n\n            for( var i = 0; i < nodes.length; i++ ) {\n                var node = nodes[i];\n\n                //ignore nodes that have been excluded\n                if( node !== false ) {\n                    //mark the node as false to exclude it from future iterations\n                    nodes[i] = false;\n\n                    //loop through all edges and follow dependencies of the current node\n                    for( var _iterator5 = this.edges, _isArray5 = Array.isArray( _iterator5 ), _i5 = 0, _iterator5 = _isArray5 ?\n                                                                                                                     _iterator5 :\n                                                                                                                     _iterator5[Symbol.iterator](); ; ) {\n                        var _ref5;\n\n                        if( _isArray5 ) {\n                            if( _i5 >= _iterator5.length ) {\n                                break;\n                            }\n                            _ref5 = _iterator5[_i5++];\n                        } else {\n                            _i5 = _iterator5.next();\n                            if( _i5.done ) {\n                                break;\n                            }\n                            _ref5 = _i5.value;\n                        }\n\n                        var edge = _ref5;\n\n                        if( edge[0] === node ) {\n                            //recurse to node dependencies\n                            visit( edge[1], [node] );\n                        }\n                    }\n\n                    //add the node to the next place in the sorted array\n                    sorted[--place] = node;\n                }\n            }\n\n            return sorted;\n        };\n\n        /**\n         * Clears edges\n         *\n         * @since   0.4.0\n         * @returns {Toposort}                  The Toposort instance\n         */\n\n        Toposort.prototype.clear = function clear() {\n            this.edges = [];\n\n            return this;\n        };\n\n        return Toposort;\n    })();\n\n    module.exports = Toposort;\n} );\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/toposort-class/build/toposort.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}}],"sources":{"../node_modules/toposort-class/build/toposort.js":"/****\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 Gustavo Henke and Aaron Trent\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n ****/\n(function( global, factory ) {\n    if( typeof define === \"function\" && define.amd ) {\n        define( \"Toposort\", [\"exports\", \"module\"], factory );\n    } else if( typeof exports !== \"undefined\" && typeof module !== \"undefined\" ) {\n        factory( exports, module );\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory( mod.exports, mod );\n        global.Toposort = mod.exports;\n    }\n})( this, function( exports, module ) {\n    \"use strict\";\n\n    function _classCallCheck( instance, Constructor ) {\n        if( !(instance instanceof Constructor) ) {\n            throw new TypeError( \"Cannot call a class as a function\" );\n        }\n    }\n\n    var Toposort = (function() {\n        function Toposort() {\n            _classCallCheck( this, Toposort );\n\n            this.edges = [];\n            this.Toposort = Toposort;\n        }\n\n        /**\n         * Adds dependency edges.\n         *\n         * @since   0.1.0\n         * @param   {String} item               An dependent name. Must be an string and not empty\n         * @param   {String[]|String} [deps]    An dependency or array of dependencies\n         * @returns {Toposort}                  The Toposort instance\n         */\n\n        Toposort.prototype.add = function add( item, deps ) {\n            if( typeof item !== \"string\" || !item ) {\n                throw new TypeError( \"Dependent name must be given as a not empty string\" );\n            }\n\n            deps = Array.isArray( deps ) ? deps : [deps];\n\n            if( deps.length > 0 ) {\n                for( var _iterator = deps, _isArray = Array.isArray( _iterator ), _i = 0, _iterator = _isArray ?\n                                                                                                      _iterator :\n                                                                                                      _iterator[Symbol.iterator](); ; ) {\n                    var _ref;\n\n                    if( _isArray ) {\n                        if( _i >= _iterator.length ) {\n                            break;\n                        }\n                        _ref = _iterator[_i++];\n                    } else {\n                        _i = _iterator.next();\n                        if( _i.done ) {\n                            break;\n                        }\n                        _ref = _i.value;\n                    }\n\n                    var dep = _ref;\n\n                    if( typeof dep !== \"string\" || !dep ) {\n                        throw new TypeError( \"Dependency name must be given as a not empty string\" );\n                    }\n\n                    this.edges.push( [item, dep] );\n                }\n            } else {\n                this.edges.push( [item] );\n            }\n\n            return this;\n        };\n\n        /**\n         * Runs the toposorting and return an ordered array of strings\n         *\n         * @since   0.1.0\n         * @returns {String[]}  The list of items topologically sorted.\n         */\n\n        Toposort.prototype.sort = function sort() {\n            var _this = this;\n\n            var nodes = [];\n\n            //accumulate unique nodes into a large list\n            for( var _iterator2 = this.edges, _isArray2 = Array.isArray( _iterator2 ), _i2 = 0, _iterator2 = _isArray2 ?\n                                                                                                             _iterator2 :\n                                                                                                             _iterator2[Symbol.iterator](); ; ) {\n                var _ref2;\n\n                if( _isArray2 ) {\n                    if( _i2 >= _iterator2.length ) {\n                        break;\n                    }\n                    _ref2 = _iterator2[_i2++];\n                } else {\n                    _i2 = _iterator2.next();\n                    if( _i2.done ) {\n                        break;\n                    }\n                    _ref2 = _i2.value;\n                }\n\n                var edge = _ref2;\n\n                for( var _iterator3 = edge, _isArray3 = Array.isArray( _iterator3 ), _i3 = 0, _iterator3 = _isArray3 ?\n                                                                                                           _iterator3 :\n                                                                                                           _iterator3[Symbol.iterator](); ; ) {\n                    var _ref3;\n\n                    if( _isArray3 ) {\n                        if( _i3 >= _iterator3.length ) {\n                            break;\n                        }\n                        _ref3 = _iterator3[_i3++];\n                    } else {\n                        _i3 = _iterator3.next();\n                        if( _i3.done ) {\n                            break;\n                        }\n                        _ref3 = _i3.value;\n                    }\n\n                    var node = _ref3;\n\n                    if( nodes.indexOf( node ) === -1 ) {\n                        nodes.push( node );\n                    }\n                }\n            }\n\n            //initialize the placement of nodes into the sorted array at the end\n            var place = nodes.length;\n\n            //initialize the sorted array with the same length as the unique nodes array\n            var sorted = new Array( nodes.length );\n\n            //define a visitor function that recursively traverses dependencies.\n            var visit = function visit( node, predecessors ) {\n                //check if a node is dependent of itself\n                if( predecessors.length !== 0 && predecessors.indexOf( node ) !== -1 ) {\n                    throw new Error( \"Cyclic dependency found. \" + node + \" is dependent of itself.\\nDependency chain: \"\n                                     + predecessors.join( \" -> \" ) + \" => \" + node );\n                }\n\n                var index = nodes.indexOf( node );\n\n                //if the node still exists, traverse its dependencies\n                if( index !== -1 ) {\n                    var copy = false;\n\n                    //mark the node as false to exclude it from future iterations\n                    nodes[index] = false;\n\n                    //loop through all edges and follow dependencies of the current node\n                    for( var _iterator4 = _this.edges, _isArray4 = Array.isArray( _iterator4 ), _i4 = 0, _iterator4 = _isArray4 ?\n                                                                                                                      _iterator4 :\n                                                                                                                      _iterator4[Symbol.iterator](); ; ) {\n                        var _ref4;\n\n                        if( _isArray4 ) {\n                            if( _i4 >= _iterator4.length ) {\n                                break;\n                            }\n                            _ref4 = _iterator4[_i4++];\n                        } else {\n                            _i4 = _iterator4.next();\n                            if( _i4.done ) {\n                                break;\n                            }\n                            _ref4 = _i4.value;\n                        }\n\n                        var edge = _ref4;\n\n                        if( edge[0] === node ) {\n                            //lazily create a copy of predecessors with the current node concatenated onto it\n                            copy = copy || predecessors.concat( [node] );\n\n                            //recurse to node dependencies\n                            visit( edge[1], copy );\n                        }\n                    }\n\n                    //add the node to the next place in the sorted array\n                    sorted[--place] = node;\n                }\n            };\n\n            for( var i = 0; i < nodes.length; i++ ) {\n                var node = nodes[i];\n\n                //ignore nodes that have been excluded\n                if( node !== false ) {\n                    //mark the node as false to exclude it from future iterations\n                    nodes[i] = false;\n\n                    //loop through all edges and follow dependencies of the current node\n                    for( var _iterator5 = this.edges, _isArray5 = Array.isArray( _iterator5 ), _i5 = 0, _iterator5 = _isArray5 ?\n                                                                                                                     _iterator5 :\n                                                                                                                     _iterator5[Symbol.iterator](); ; ) {\n                        var _ref5;\n\n                        if( _isArray5 ) {\n                            if( _i5 >= _iterator5.length ) {\n                                break;\n                            }\n                            _ref5 = _iterator5[_i5++];\n                        } else {\n                            _i5 = _iterator5.next();\n                            if( _i5.done ) {\n                                break;\n                            }\n                            _ref5 = _i5.value;\n                        }\n\n                        var edge = _ref5;\n\n                        if( edge[0] === node ) {\n                            //recurse to node dependencies\n                            visit( edge[1], [node] );\n                        }\n                    }\n\n                    //add the node to the next place in the sorted array\n                    sorted[--place] = node;\n                }\n            }\n\n            return sorted;\n        };\n\n        /**\n         * Clears edges\n         *\n         * @since   0.4.0\n         * @returns {Toposort}                  The Toposort instance\n         */\n\n        Toposort.prototype.clear = function clear() {\n            this.edges = [];\n\n            return this;\n        };\n\n        return Toposort;\n    })();\n\n    module.exports = Toposort;\n} );\n"},"lineCount":284}},"error":null,"hash":"da3a02bf9d14e4e96956e30b33d41efa","cacheData":{"env":{}}}